<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.risen.realtime.resource.report.analysis.mapper.DataSpcCz302ZRMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.risen.realtime.resource.report.analysis.entity.DataSpcCz302ZREntity">
        <id column="process_line" property="processLine"/>
        <id column="data_time" property="dataTime"/>
        <result column="data_key" property="dataKey"/>
        <result column="class_order" property="classOrder"/>
        <result column="tank_number" property="tankNumber"/>
        <result column="liquid_life" property="liquidLife"/>
        <result column="weight_type" property="weightType"/>
        <result column="weight_throw_before1" property="weightThrowBefore1"/>
        <result column="weight_throw_before2" property="weightThrowBefore2"/>
        <result column="weight_throw_after1" property="weightThrowAfter1"/>
        <result column="weight_throw_after2" property="weightThrowAfter2"/>
        <result column="machine_test" property="machineTest"/>
        <result column="avg1" property="avg1"/>
        <result column="avg2" property="avg2"/>
        <result column="middle_reduce_weight_fabia" property="middleReduceWeightFabia"/>
        <result column="control_up_weight_fabia" property="controlUpWeightFabia"/>
        <result column="control_down_weight_fabia" property="controlDownWeightFabia"/>
        <result column="standards_up_weight_fabia" property="standardsUpWeightFabia"/>
        <result column="standards_down_weight_fabia" property="standardsDownWeightFabia"/>
        <result column="middle_weight_three_peak" property="middleWeightThreePeak"/>
        <result column="contrl_up_weight_three_peak" property="contrlUpWeightThreePeak"/>
        <result column="contrl_down_weight_three_peak" property="contrlDownWeightThreePeak"/>
        <result column="standards_up_weight_three_peak" property="standardsUpWeightThreePeak"/>
        <result column="standards_down_weight_three_peak" property="standardsDownWeightThreePeak"/>
        <result column="middle_reflex_rate_fabia" property="middleReflexRateFabia"/>
        <result column="contrl_up_reflex_rate_fabia" property="contrlUpReflexRateFabia"/>
        <result column="contrl_down_reflex_rate_fabia" property="contrlDownReflexRateFabia"/>
        <result column="standards_up_reflex_rate_fabia" property="standardsUpReflexRateFabia"/>
        <result column="standards_down_reflex_rate_fabia" property="standardsDownReflexRateFabia"/>
        <result column="middle_reflex_rate_three_peak" property="middleReflexRateThreePeak"/>
        <result column="contrl_up_reflex_rate_three_peak" property="contrlUpReflexRateThreePeak"/>
        <result column="contrl_down_reflex_rate_three_peak" property="contrlDownReflexRateThreePeak"/>
        <result column="standards_up_reflex_rate_three_peak" property="standardsUpReflexRateThreePeak"/>
        <result column="standards_down_reflex_rate_three_peak" property="standardsDownReflexRateThreePeak"/>
        <result column="remark" property="remark"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        extract(epoch from (to_timestamp(data_time, 'yyyy-MM-dd hh24:mi:ss'))) * 1000 as data_key
       , process_line, data_time, class_order, tank_number, liquid_life, weight_type, weight_throw_before1, weight_throw_before2, weight_throw_after1, weight_throw_after2, machine_test, avg1, avg2, middle_reduce_weight_fabia, control_up_weight_fabia, control_down_weight_fabia, standards_up_weight_fabia, standards_down_weight_fabia, middle_weight_three_peak, contrl_up_weight_three_peak, contrl_down_weight_three_peak, standards_up_weight_three_peak, standards_down_weight_three_peak, middle_reflex_rate_fabia, contrl_up_reflex_rate_fabia, contrl_down_reflex_rate_fabia, standards_up_reflex_rate_fabia, standards_down_reflex_rate_fabia, middle_reflex_rate_three_peak, contrl_up_reflex_rate_three_peak, contrl_down_reflex_rate_three_peak, standards_up_reflex_rate_three_peak, standards_down_reflex_rate_three_peak, remark, create_time
    </sql>


    <select id="queryMaxKey" resultType="java.lang.Long">
        select COALESCE(max(extract(epoch from (to_timestamp(data_time, 'yyyy-MM-dd hh24:mi:ss'))) * 1000), 0)
        from data_spc_cz302_02
    </select>


    <select id="queryListByCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from data_spc_cz302_02 where extract(epoch from (to_timestamp(data_time, 'yyyy-MM-dd hh24:mi:ss'))) * 1000 > #{dataKey}
        order by data_time asc
        limit #{limitCount}
    </select>


</mapper>
